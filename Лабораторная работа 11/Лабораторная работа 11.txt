using System;

class Zombie
{
    public string Name { get; set; }
    public int BirthYear { get; set; }

    public Zombie(string name, int birthYear)
    {
        Name = name;
        BirthYear = birthYear;
    }

    public virtual void DisplayInfo()
    {
        Console.WriteLine($"Name: {Name}, Year of Birth: {BirthYear}");
    }
}

class ZombieFarmer : Zombie
{
    public int Experience { get; set; }
    public string[] Tools { get; set; }

    public ZombieFarmer(string name, int birthYear, int experience, string[] tools)
        : base(name, birthYear)
    {
        Experience = experience;
        Tools = tools;
    }

    public override void DisplayInfo()
    {
        base.DisplayInfo();
        Console.WriteLine($"Experience: {Experience} years, Tools: {string.Join(", ", Tools)}");
    }
}

class ZombieDriver : Zombie
{
    public string VehicleType { get; set; }
    public string[] Vehicles { get; set; }

    public ZombieDriver(string name, int birthYear, string vehicleType, string[] vehicles)
        : base(name, birthYear)
    {
        VehicleType = vehicleType;
        Vehicles = vehicles;
    }

    public override void DisplayInfo()
    {
        base.DisplayInfo();
        Console.WriteLine($"Vehicle Type: {VehicleType}, Vehicles: {string.Join(", ", Vehicles)}");
    }
}

class Program
{
    static void Main(string[] args)
    {
        const int maxZombies = 100;
        Zombie[] zombies = new Zombie[maxZombies];
        int zombieCount = 0;

        Console.Write("Enter the number of zombies (maximum 100): ");
        int inputCount = ReadInt();
        if (inputCount > maxZombies)
            inputCount = maxZombies;

        for (int i = 0; i < inputCount; i++)
        {
            Console.WriteLine($"Enter information about zombie {i + 1}:");
            Console.Write("Name: ");
            string name = Console.ReadLine();
            Console.Write("Year of Birth: ");
            int birthYear = ReadInt();
            Console.Write("Choose a role (1 - Farmer, 2 - Driver): ");
            int role = ReadInt();

            if (role == 1) // ZombieFarmer
            {
                Console.Write("Experience: ");
                int experience = ReadInt();
                Console.Write("Enter the number of tools: ");
                int toolCount = ReadInt();
                string[] tools = new string[toolCount];
                for (int j = 0; j < toolCount; j++)
                {
                    Console.Write($"Tool {j + 1}: ");
                    tools[j] = Console.ReadLine();
                }
                zombies[zombieCount++] = new ZombieFarmer(name, birthYear, experience, tools);
            }
            else if (role == 2) // ZombieDriver
            {
                Console.Write("Vehicle Type: ");
                string vehicleType = Console.ReadLine();
                Console.Write("Enter the number of vehicles: ");
                int vehicleCount = ReadInt();
                string[] vehicles = new string[vehicleCount];
                for (int j = 0; j < vehicleCount; j++)
                {
                    Console.Write($"Vehicle {j + 1}: ");
                    vehicles[j] = Console.ReadLine();
                }
                zombies[zombieCount++] = new ZombieDriver(name, birthYear, vehicleType, vehicles);
            }
        }
        for (int i = 0; i < zombieCount - 1; i++)
        {
            for (int j = 0; j < zombieCount - i - 1; j++)
            {
                if (zombies[j].BirthYear > zombies[j + 1].BirthYear)
                {
                    Zombie temp = zombies[j];
                    zombies[j] = zombies[j + 1];
                    zombies[j + 1] = temp;
                }
            }
        }

        Console.WriteLine("\nZombies sorted by year of birth:");
        for (int i = 0; i < zombieCount; i++)
        {
            zombies[i].DisplayInfo();
            Console.WriteLine();
        }
        while (true)
        {
            Console.Write("Enter a year of birth to filter by (or 0 to exit): ");
            int filterYear = ReadInt();
            if (filterYear == 0)
                break;

            bool found = false;
            Console.WriteLine($"\nZombies born in the year {filterYear}:");
            for (int i = 0; i < zombieCount; i++)
            {
                if (zombies[i].BirthYear == filterYear)
                {
                    zombies[i].DisplayInfo();
                    Console.WriteLine();
                    found = true;
                }
            }

            if (!found)
            {
                Console.WriteLine("No zombies found with this year of birth.");
            }
        }
    }

    static int ReadInt()
    {
        while (true)
        {
            string input = Console.ReadLine();
            if (int.TryParse(input, out int result))
                return result;

            Console.WriteLine("Error! Please enter a valid number:");
        }
    }
}